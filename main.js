!function(){"use strict";function e(e,t){const a=Math.floor(e/t),r=e%t;return 0===a?0===r?"top-left":r===t-1?"top-right":"top":a===t-1?0===r?"bottom-left":r===t-1?"bottom-right":"bottom":0===r?"left":r===t-1?"right":"center"}class t{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(t){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(t);for(let t=0;t<this.boardSize**2;t+=1){const a=document.createElement("div");a.classList.add("cell","map-tile",`map-tile-${e(t,this.boardSize)}`),a.addEventListener("mouseenter",(e=>this.onCellEnter(e))),a.addEventListener("mouseleave",(e=>this.onCellLeave(e))),a.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(a)}this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const a of e){const e=this.boardEl.children[a.position],r=document.createElement("div");r.classList.add("character",a.character.type);const s=document.createElement("div");s.classList.add("health-level");const i=document.createElement("div");i.classList.add("health-level-indicator","health-level-indicator-"+((t=a.character.health)<15?"critical":t<50?"normal":"high")),i.style.width=`${a.character.health}%`,s.appendChild(i),r.appendChild(s),e.appendChild(r)}var t}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(e){e.preventDefault(),this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach((e=>e.call(null)))}static showError(e){alert(e)}static showMessage(e){alert(e)}selectCell(e,t="yellow"){this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((a=>{const r=this.cells[e],s=document.createElement("span");s.textContent=t,s.classList.add("damage"),r.appendChild(s),s.addEventListener("animationend",(()=>{r.removeChild(s),a()}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}}class a{constructor(e=[]){this.characters=e}addCharacter(e){this.characters.push(e)}}class r{constructor(e,t="generic"){if(new.target===r)throw new Error("Нельзя создавать экземпляры класса Character напрямую.");this.level=e,this.type=t,this.health=50}}class s extends r{constructor(e){super(e,"bowman"),this.attack=25,this.defence=25}}class i extends r{constructor(e){super(e,"swordsman"),this.attack=40,this.defence=10}}class c extends r{constructor(e){super(e,"magician"),this.attack=10,this.defence=40}}class n extends r{constructor(e){super(e,"vampire"),this.attack=25,this.defence=25}}class o extends r{constructor(e){super(e,"undead"),this.attack=40,this.defence=10}}class h extends r{constructor(e){super(e,"daemon"),this.attack=10,this.defence=40}}const l=[s,i,c],d=[n,o,h];function u(e,t,r){const s=[],i=function*(e,t){for(;;){const a=e[Math.floor(Math.random()*e.length)],r=Math.floor(Math.random()*t)+1;yield new a(r)}}(e,t);for(let e=0;e<r;e+=1)s.push(i.next().value);return new a(s)}class m{constructor(e,t){if(!(e instanceof r))throw new Error("character must be instance of Character or its children");if("number"!=typeof t)throw new Error("position must be a number");this.character=e,this.position=t}}const p={1:"prairie",2:"desert",3:"arctic",4:"mountain"};function C(e){if(!Object.prototype.hasOwnProperty.call(p,e))throw new Error(`Тема для уровня ${e} не найдена`);return p[e]}class g{constructor(){this.currentTurn="player",this.currentLevel=1,this.positionedCharacters=[],this.maxScore=0}switchTurn(){this.currentTurn="player"===this.currentTurn?"computer":"player"}toObject(){return{currentTurn:this.currentTurn,currentLevel:this.currentLevel,maxScore:this.maxScore,positionedCharacters:this.positionedCharacters.map((e=>({characterType:e.character.constructor.name,level:e.character.level,health:e.character.health,attack:e.character.attack,defence:e.character.defence,position:e.position})))}}static from(e){const t=new g;return t.currentTurn=e?.currentTurn||"player",t.currentLevel=e?.currentLevel||1,t.maxScore=e?.maxScore||0,e?.positionedCharacters&&(t.positionedCharacters=e.positionedCharacters.map((e=>{let t;switch(e.characterType){case"Swordsman":t=i;break;case"Bowman":t=s;break;case"Magician":t=c;break;case"Undead":t=o;break;case"Vampire":t=n;break;case"Daemon":t=h;break;default:throw new Error("Неизвестный тип персонажа: "+e.characterType)}const a=new t(e.level);return a.health=e.health,a.attack=e.attack,a.defence=e.defence,new m(a,e.position)}))),t}}var f="auto",v="pointer",w="crosshair",L="not-allowed";const y=new t;y.bindToDOM(document.querySelector("#game-container"));const b=new class{constructor(e){this.storage=e}save(e){this.storage.setItem("state",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(e){console.error("Ошибка при загрузке состояния игры:",e)}}}(localStorage),k=new class{constructor(e,t){this.gamePlay=e,this.stateService=t,this.gameState=new g,this.currentLevel=1,this.selectedCharacterIndex=null,this.selectedCharacter=null,this.boardSize=this.gamePlay.boardSize,this.maxScore=0}init(){try{this.stateService.load()?this.loadGameState():this.startNewGame()}catch(e){console.warn("Не удалось загрузить игру, начинаем новую игру.",e),this.startNewGame()}this.subscribeToCellClick(),this.gamePlay.addNewGameListener(this.onNewGameClick.bind(this)),this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this))}onNewGameClick(){this.currentLevel=1,this.gameState.maxPoints=Math.max(this.gameState.maxPoints||0,this.gameState.currentPoints||0),this.gameState.currentPoints=0,this.gameState=g.from({}),this.startNewGame(),this.gamePlay.setCursor(f),this.subscribeToCellClick(),this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),console.log("Новая игра начата!")}startNewGame(){this.positionedCharacters=[],this.currentLevel=1,this.gameState=g.from({}),this.playerTeam=u(l,1,2),this.enemyTeam=u(d,1,2),this.gamePlay.drawUi(C(this.currentLevel)),this.positionCharacters(),this.maxScore=Math.max(this.maxScore,this.calculateScore()),this.saveGameState(),this.gameState.currentTurn="player"}calculateScore(){let e=0;return this.positionedCharacters.forEach((t=>{t&&t.character&&l.includes(t.character.constructor)&&(e+=t.character.health)})),e}saveGameState(){try{if(console.log("Попытка сохранить состояние игры..."),!this.positionedCharacters||!Array.isArray(this.positionedCharacters))throw new Error("Некорректные данные персонажей для сохранения.");const e={currentLevel:this.currentLevel,currentTurn:this.gameState.currentTurn,maxScore:this.maxScore,positionedCharacters:this.positionedCharacters.map((e=>{if(!e.character)throw new Error("Некорректные данные персонажа для сохранения.");return{character:{type:e.character.constructor.name,level:e.character.level,attack:e.character.attack,defence:e.character.defence,health:e.character.health},position:e.position}}))};console.log("Сформированное состояние игры для сохранения:",e),this.stateService.save(e),console.log("Состояние игры успешно сохранено:",e)}catch(e){console.error("Ошибка при сохранении состояния игры:",e),t.showError("Не удалось сохранить игру.")}}loadGameState(){try{console.log("Попытка загрузки состояния игры из localStorage...");const e=this.stateService.load();if(!e||"object"!=typeof e||!Array.isArray(e.positionedCharacters))return console.warn("Загруженные данные отсутствуют или имеют неверный формат. Начинаем новую игру."),void this.startNewGame();console.log("Состояние игры успешно загружено, применяем параметры..."),this.currentLevel=e.currentLevel,this.gameState.currentTurn=e.currentTurn||"player",this.maxScore=e.maxScore||0,this.positionedCharacters=e.positionedCharacters.map((e=>{if(!e.character||"number"!=typeof e.position)throw new Error("Некорректные данные персонажа");let t;switch(e.character.type){case"Swordsman":t=new i(e.character.level);break;case"Bowman":t=new s(e.character.level);break;case"Magician":t=new c(e.character.level);break;case"Vampire":t=new n(e.character.level);break;case"Undead":t=new o(e.character.level);break;case"Daemon":t=new h(e.character.level);break;default:throw new Error(`Неизвестный тип персонажа: ${e.character.type}`)}return t.attack=e.character.attack,t.defence=e.character.defence,t.health=e.character.health,new m(t,e.position)})),console.log("Персонажи успешно восстановлены:",this.positionedCharacters),this.gamePlay.drawUi(C(this.currentLevel)),this.gamePlay.redrawPositions(this.positionedCharacters),console.log("Интерфейс успешно отрисован, игра восстановлена из сохраненного состояния.")}catch(e){console.error("Ошибка при загрузке сохраненного состояния:",e),t.showError("Не удалось загрузить игру. Начинаем новую игру."),this.startNewGame()}}subscribeToCellClick(){this.gamePlay.addCellClickListener(this.onCellClick.bind(this))}positionCharacters(){const e=this.generateUniquePositions([0,1],this.playerTeam.characters.length),t=this.generateUniquePositions([6,7],this.enemyTeam.characters.length);this.positionedCharacters=[...this.playerTeam.characters.map(((t,a)=>new m(t,e[a]))),...this.enemyTeam.characters.map(((e,a)=>new m(e,t[a])))],this.gamePlay.redrawPositions(this.positionedCharacters)}getMoveRange(e){return e instanceof i||e instanceof o?4:e instanceof s||e instanceof n?2:1}getAttackRange(e){return e instanceof i||e instanceof o?1:e instanceof s||e instanceof n?2:e instanceof c||e instanceof h?4:1}isWithinRadius(e,t,a){const r=this.boardSize,s=e%r,i=Math.floor(e/r),c=t%r,n=Math.floor(t/r),o=Math.abs(s-c),h=Math.abs(i-n);return o<=a&&h<=a}isValidMove(e,t){if(!this.selectedCharacter||!this.selectedCharacter.character)return!1;const a=this.boardSize,r=e%a,s=Math.floor(e/a),i=t%a,c=Math.floor(t/a),n=Math.abs(i-r),o=Math.abs(c-s);return(r===i||s===c)&&Math.max(n,o)<=this.getMoveRange(this.selectedCharacter.character)||n===o&&n<=2*this.getMoveRange(this.selectedCharacter.character)}onCellClick(e){const a=this.getCharacterAtPosition(e);if(a&&l.includes(a.character.constructor))null!==this.selectedCharacterIndex&&this.gamePlay.deselectCell(this.selectedCharacterIndex),this.gamePlay.selectCell(e),this.selectedCharacterIndex=e,this.selectedCharacter=a;else if(this.selectedCharacter){const r=a&&d.includes(a.character.constructor)&&this.isWithinRadius(this.selectedCharacter.position,e,this.getAttackRange(this.selectedCharacter.character)),s=!a&&this.isWithinRadius(this.selectedCharacter.position,e,this.getMoveRange(this.selectedCharacter.character))&&this.isValidMove(this.selectedCharacter.position,e);r?this.performAttack(this.selectedCharacter.character,a.character,e).then((()=>{this.switchTurn()})):s?(this.moveCharacter(e),this.switchTurn()):t.showError("Выберите доступного для перемещения или атаки персонажа")}else t.showError("Выберите своего персонажа для начала хода")}async performAttack(e,t,a){const r=Math.max(e.attack-t.defence,.1*e.attack);if(t.health-=r,await this.gamePlay.showDamage(a,r),!(t.health<=0)||(this.positionedCharacters=this.positionedCharacters.filter((e=>e.character!==t)),console.log(`Персонаж на позиции ${a} побежден и удален с поля`),this.positionedCharacters.some((e=>d.includes(e.character.constructor)))))return this.gamePlay.redrawPositions(this.positionedCharacters),Promise.resolve();this.startNextLevel()}switchTurn(){this.gameState.currentTurn="player"===this.gameState.currentTurn?"computer":"player",console.log(`Ход перешел к ${this.gameState.currentTurn}`),this.saveGameState(),"computer"===this.gameState.currentTurn&&this.computerAction(),this.positionedCharacters.some((e=>l.includes(e.character.constructor)))||this.gameOver()}onCellEnter(e){const t=this.getCharacterAtPosition(e);if(t){const a=this.createCharacterTooltip(t.character);this.gamePlay.showCellTooltip(a,e)}if(this.selectedCharacter){const a=this.selectedCharacter.character;if(t&&d.includes(t.character.constructor)&&this.isWithinRadius(this.selectedCharacter.position,e,this.getAttackRange(a)))return this.gamePlay.setCursor(w),void this.gamePlay.selectCell(e,"red");if(!t&&this.isWithinRadius(this.selectedCharacter.position,e,this.getMoveRange(a))&&this.isValidMove(this.selectedCharacter.position,e))return this.gamePlay.setCursor(v),void this.gamePlay.selectCell(e,"green");this.gamePlay.setCursor(L)}else t&&l.includes(t.character.constructor)?this.gamePlay.setCursor(v):this.gamePlay.setCursor(L)}onCellLeave(e){this.gamePlay.hideCellTooltip(e),this.selectedCharacterIndex!==e&&this.gamePlay.deselectCell(e)}moveCharacter(e){this.selectedCharacter.position=e,this.gamePlay.deselectCell(this.selectedCharacterIndex),this.selectedCharacterIndex=null,this.selectedCharacter=null,this.gamePlay.redrawPositions(this.positionedCharacters)}getCharacterAtPosition(e){return this.positionedCharacters.find((t=>t.position===e))}createCharacterTooltip(e){return`🎖 ${e.level} ⚔ ${e.attack} 🛡 ${e.defence} ❤ ${e.health}`}generateUniquePositions(e,t,a=[]){const r=new Set,s=new Set(a.map((e=>e.position)));for(;r.size<t;){const t=8*Math.floor(8*Math.random())+e[Math.floor(Math.random()*e.length)];s.has(t)||r.has(t)||r.add(t)}return Array.from(r)}calcRange(e,t){const a=this.boardSize,r=new Set,s=e%a,i=Math.floor(e/a);for(let e=0;e<a;e++)for(let c=0;c<a;c++){const n=Math.abs(c-s),o=Math.abs(e-i);if((0===n||0===o)&&Math.max(n,o)<=t){const t=e*a+c;r.add(t)}if(n===o&&n<=2*t){const t=e*a+c;r.add(t)}}return Array.from(r)}findAllowedToAttack(e,t){let a;switch(t){case"swordsman":case"undead":default:a=1;break;case"bowman":case"vampire":a=2;break;case"magician":case"daemon":a=4}return this.calcRange(e,a)}computerAction(){this.gameState.currentTurn="comp";let e=null,t=null;if(this.positionedCharacters.forEach((a=>{d.includes(a.character.constructor)&&this.findAllowedToAttack(a.position,a.character.constructor.name.toLowerCase()).forEach((r=>{const s=this.getCharacterAtPosition(r);s&&l.includes(s.character.constructor)&&(e=a,t=s)}))})),e&&t)console.log(`Компьютер атакует ${t.character.constructor.name} на позиции ${t.position}`),this.performAttack(e.character,t.character,t.position).then((()=>{this.switchTurn()}));else{let t=null,a=1/0;if(this.positionedCharacters.forEach((r=>{d.includes(r.character.constructor)&&this.positionedCharacters.forEach((s=>{if(l.includes(s.character.constructor)){const i=Math.abs(s.position%8-r.position%8)+Math.abs(Math.floor(s.position/8)-Math.floor(r.position/8));i<a&&(a=i,t=s,e=r)}}))})),t&&e){const t=this.calcRange(e.position,this.getMoveRange(e.character)).filter((t=>!this.positionedCharacters.some((e=>e.position===t))&&this.isValidMove(e.position,t)));if(t.length>0){const a=t[Math.floor(Math.random()*t.length)];console.log(`Компьютер перемещает ${e.character.constructor.name} на позицию ${a}`),e.position=a,this.gamePlay.redrawPositions(this.positionedCharacters),this.switchTurn()}}}}levelUp(e){e.level+=1,e.attack=Math.max(e.attack,e.attack*(80+e.health)/100),e.defence=Math.max(e.defence,e.defence*(80+e.health)/100),e.health=Math.min(100,e.health+80)}gameOver(e){e?t.showMessage("Поздравляем! Вы прошли все уровни игры! Спасибо за игру!"):t.showMessage("Игра окончена. Вы проиграли."),this.gamePlay.setCursor(L),this.gamePlay.cellClickListeners=[],this.gamePlay.cellEnterListeners=[],this.gamePlay.cellLeaveListeners=[]}startNextLevel(){if(this.currentLevel+=1,this.currentLevel>4)return void this.gameOver(!0);this.gamePlay.drawUi(C(this.currentLevel)),this.positionedCharacters.forEach((e=>{l.includes(e.character.constructor)&&this.levelUp(e.character)}));const e=u(l,this.currentLevel,1).characters[0],t=this.generateUniquePositions([0,1],1),a=new m(e,t[0]),r=u(d,this.currentLevel,this.currentLevel+1),s=this.generateUniquePositions([6,7],r.characters.length),i=r.characters.map(((e,t)=>new m(e,s[t])));this.positionedCharacters=[...this.positionedCharacters.filter((e=>l.includes(e.character.constructor))),a,...i],this.gamePlay.redrawPositions(this.positionedCharacters),this.gameState.currentTurn="player",console.log(`Новый уровень ${this.currentLevel} начат!`),this.saveGameState()}}(y,b);k.init()}();